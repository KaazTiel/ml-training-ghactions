name: Train and Deploy ML Model

on:
  schedule:
    - cron: '0 0 * * *'  # Executa diariamente à meia-noite (UTC)
  workflow_dispatch:  # Permite execução manual

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositório
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Instalar dependências do Node.js
        run: npm install

      - name: Instalar dependências do TensorFlow
        run: |
          python -m pip install --upgrade pip
          python -m pip install tensorflow

      - name: Criar ambiente virtual Python
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install tensorflow

      - name: Executar treinamento do modelo
        run: npm run train

      - name: Verificar conteúdo do diretório training/model
        run: |
          if [ -f "training/model/model.json" ] && [ -f "training/model.weights.h5" ]; then
            echo "Modelo salvo corretamente (model.json e model.weights.h5 encontrados)!"
          else
            echo "Arquivos do modelo não encontrados ou estrutura de diretórios inesperada."
            exit 1
          fi

      - name: Converter modelo para .tflite
        run: |
          if [ -f "training/model/model.json" ] && [ -f "training/model.weights.h5" ]; then
            echo "Iniciando conversão para .tflite..."
            python convert_to_tflite.py
          else
            echo "Nenhum arquivo de modelo válido encontrado para conversão."
            exit 1
          fi

      - name: Verificar se o modelo .tflite foi gerado
        run: |
          if [ -f "training/model/model.tflite" ]; then
            echo "Modelo convertido para .tflite com sucesso!"
          else
            echo "Erro: modelo .tflite não foi encontrado."
            exit 1
          fi

      - name: Instalar Firebase CLI
        run: npm install -g firebase-tools

      - name: Configurar credenciais do Firebase
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > $HOME/firebase-service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase-service-account.json

      - name: Configurar Firebase com o projeto específico
        run: firebase use --project ml-training-ghactions --alias default

      - name: Fazer Deploy do Modelo para Firebase ML
        run: firebase ml:models deploy --model-file training/model/model.tflite --project ml-training-ghactions
